# 💇‍♂️ TrimQ - Beautiful Barber Shop Queue Management

> **Professional, beautiful, and simple queue management system designed for barber shops**

![TrimQ Preview](https://img.shields.io/badge/Status-Ready%20to%20Use-brightgreen) ![Python](https://img.shields.io/badge/Python-3.7+-blue) ![Flask](https://img.shields.io/badge/Flask-2.3+-red)

## ✨ What is TrimQ?

TrimQ is an elegant, user-friendly queue management system specifically designed for barber shops. It eliminates the chaos of paper lists and verbal queues with a beautiful, digital solution that both staff and customers will love.

### 🎯 Perfect For:
- **Barber shops** of any size
- **Hair salons** looking for organization
- **Beauty parlors** wanting to go digital
- **Any service business** with appointment queues

## 🚀 Quick Start (5 Minutes)

### 1. **Download & Setup**
```bash
# Create project folder
mkdir TrimQ
cd TrimQ

# Create virtual environment
python -m venv trimenv

# Activate it (Windows)
trimenv\Scripts\activate
# Or on Mac/Linux: source trimenv/bin/activate

# Install dependencies
pip install flask flask-sqlalchemy flask-login flask-wtf wtforms
```

### 2. **Create Files**
- Save the **Beautiful TrimQ Application** code as `app.py`
- Create a `templates` folder
- Save each template from **Beautiful Simplified Templates** as separate `.html` files:
  - `base.html`
  - `welcome.html`
  - `login.html`
  - `dashboard.html`
  - `add_customer.html`
  - `queue.html`
  - `display.html`
  - `settings.html`

### 3. **Run & Enjoy!**
```bash
python app.py
```
Open your browser to: **http://127.0.0.1:5000**

## 🔐 Demo Login Credentials

| Role | Username | Password | Access Level |
|------|----------|----------|--------------|
| **Admin** | `admin` | `admin123` | Full system access |
| **Staff** | `staff` | `staff123` | Basic queue management |

> ⚠️ **Important**: Change these passwords immediately in production!

## 🎨 Beautiful Features

### 🌟 **Modern Design**
- **Gradient backgrounds** and smooth animations
- **Glass-morphism effects** for a premium feel
- **Responsive design** works on phones, tablets, and desktops
- **Poppins font** for clean, professional typography
- **Intuitive color coding** for different queue states

### 📱 **Tech-Novice Friendly**
- **Large, clear buttons** with icons
- **Simple navigation** - no confusing menus
- **Instant feedback** with beautiful alerts
- **One-click actions** for common tasks
- **Auto-refresh** public display

### 🔧 **Powerful Functionality**
- ✅ **Real-time queue management**
- ✅ **Smart wait time estimates**
- ✅ **Customer service tracking**
- ✅ **Staff assignment system**
- ✅ **Public display screen**
- ✅ **Daily analytics dashboard**
- ✅ **Service & pricing management**
- ✅ **Staff management**

## 📖 How to Use

### 👨‍💼 **For Shop Owners/Managers**

1. **Login** with admin credentials
2. **Add your services** (haircut, beard trim, etc.) with prices
3. **Add your barbers** to the system
4. **Train staff** on the simple interface

### 👩‍💼 **For Staff Members**

1. **Login** with your credentials
2. **Add customers** as they arrive
3. **Assign customers** to available barbers
4. **Mark services complete** when done

### 👥 **For Customers**

- **View the public display** to see current queue
- **Check wait times** in real-time
- **No app download required** - just look at the screen

## 📊 Dashboard Overview

The main dashboard shows:
- **Customers waiting** (yellow indicator)
- **Services in progress** (blue indicator)  
- **Completed today** (green indicator)
- **Quick action buttons** for common tasks

## 🎯 Public Display Features

The customer-facing display shows:
- **Who's currently being served**
- **Next 5 customers in queue**
- **Real-time wait estimates**
- **Auto-refresh every 30 seconds**
- **Beautiful dark theme** for easy viewing

## ⚙️ Settings & Configuration

### 🛠️ **Services Management**
- Add new services (Classic Cut, Beard Styling, etc.)
- Set duration and pricing
- Activate/deactivate services

### 👥 **Staff Management**
- Add/remove barbers
- Activate/deactivate staff members
- Assign to specific branches (future feature)

## 🎨 Customization

### **Colors & Branding**
The app uses CSS variables for easy customization:
```css
:root {
    --primary-color: #2563eb;    /* Main blue */
    --secondary-color: #f1f5f9;  /* Light gray */
    --accent-color: #10b981;     /* Green */
    --warning-color: #f59e0b;    /* Orange */
    --danger-color: #ef4444;     /* Red */
}
```

### **Shop Name & Logo**
Change the navbar brand in `base.html`:
```html
<a class="navbar-brand" href="{{ url_for('index') }}">
    <i class="bi bi-scissors"></i> Your Shop Name
</a>
```

## 📱 Mobile-First Design

TrimQ is designed to work perfectly on:
- 📱 **Phones** - Staff can manage queue on mobile
- 💻 **Tablets** - Perfect for customer check-ins
- 🖥️ **Desktop** - Full featured admin interface
- 📺 **TV Displays** - Customer-facing queue screen

## 🔒 Security Features

- ✅ **Password hashing** with Werkzeug
- ✅ **Session management** with Flask-Login
- ✅ **CSRF protection** with Flask-WTF
- ✅ **Role-based access** (Admin vs Staff)
- ✅ **SQL injection protection** with SQLAlchemy

## 🚀 Production Deployment

### **For Small Shops (Recommended)**
```bash
# Install gunicorn for production
pip install gunicorn

# Run with gunicorn
gunicorn -w 2 -b 0.0.0.0:8000 app:app
```

### **For Larger Operations**
1. **Use PostgreSQL** instead of SQLite
2. **Set up reverse proxy** with Nginx
3. **Enable HTTPS** with Let's Encrypt
4. **Use environment variables** for sensitive config

```python
# Production database config
app.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get('DATABASE_URL') or 'sqlite:///trimq.db'
app.config['SECRET_KEY'] = os.environ.get('SECRET_KEY') or 'your-secret-key'
```

## 📁 File Structure
```
TrimQ/
├── app.py                     # Main application
├── trimq.db                  # SQLite database (auto-created)
├── templates/                # HTML templates
│   ├── base.html            # Base template
│   ├── welcome.html         # Landing page
│   ├── login.html           # Staff login
│   ├── dashboard.html       # Main dashboard
│   ├── add_customer.html    # Add customer form
│   ├── queue.html           # Queue management
│   ├── display.html         # Public display
│   └── settings.html        # Admin settings
├── trimenv/                 # Virtual environment
└── README.md               # This file
```

## 🎯 Sample Data Included

The app comes pre-loaded with:

**Services:**
- Classic Cut (30 min, $35)
- Beard Styling (20 min, $25)
- Hot Towel Shave (25 min, $30)
- Full Service (60 min, $55)
- Quick Trim (15 min, $20)
- Hair Wash & Style (25 min, $28)

**Barbers:**
- Alex Rodriguez
- Jordan Smith
- Casey Johnson

## 🆘 Troubleshooting

### **Common Issues:**

**❌ Import errors in VS Code**
- Select the correct Python interpreter: `Ctrl+Shift+P` → "Python: Select Interpreter"
- Choose: `.\trimenv\Scripts\python.exe`

**❌ Database errors**
- Delete `trimq.db` and restart the app to reset

**❌ Port 5000 already in use**
- Change the port in `app.py`: `app.run(debug=True, port=5001)`

**❌ Login not working**
- Use exact credentials: `admin`/`admin123` or `staff`/`staff123`
- Clear browser cache if needed

### **Getting Help:**
1. Check this README first
2. Look at the console output for error messages
3. Try deleting the database file and restarting
4. Make sure all dependencies are installed in the virtual environment

## 🔄 Updates & Maintenance

### **Daily Tasks:**
- Check completed customers count
- Ensure all staff are active
- Monitor queue performance

### **Weekly Tasks:**
- Review popular services
- Check wait time averages
- Update service pricing if needed

### **Monthly Tasks:**
- Backup database
- Update staff list
- Review system performance

## 🎓 Training Your Staff

### **5-Minute Training Guide:**

1. **Login Process**
   - Show them the login page
   - Explain username/password

2. **Adding Customers**
   - Click "Add Customer"
   - Fill in name, phone, service
   - Click "Add to Queue"

3. **Managing Queue**
   - Click "Manage Queue"
   - Assign customers to barbers
   - Mark services complete

4. **Public Display**
   - Show customers the display screen
   - Explain auto-refresh feature

## 🌟 Why TrimQ is Better

### **vs. Paper Lists:**
- ✅ Never lose customer information
- ✅ Real-time wait estimates
- ✅ Professional appearance
- ✅ Digital analytics

### **vs. Complex POS Systems:**
- ✅ Simple and intuitive
- ✅ No monthly fees
- ✅ Quick setup
- ✅ Focused on queues, not sales

### **vs. Generic Appointment Apps:**
- ✅ Designed specifically for barber shops
- ✅ Walk-in customer friendly
- ✅ Beautiful public display
- ✅ No customer app required

## 🎁 Future Enhancements

Potential features for future versions:
- 📧 **SMS notifications** when customer is next
- 📊 **Advanced analytics** and reporting
- 🏢 **Multi-branch support** for shop chains
- 💳 **Payment integration** for full POS
- 📅 **Appointment booking** for regular customers
- 🎨 **Custom themes** and branding options

## 📞 Support

**Self-Help Resources:**
- 📖 This comprehensive README
- 💬 In-app user guide (coming soon)
- 🎥 Video tutorials (coming soon)

**Technical Requirements:**
- **Python 3.7+**
- **Modern web browser**
- **Windows/Mac/Linux**
- **1GB RAM minimum**
- **50MB disk space**

## 📜 License

**MIT License** - Feel free to use, modify, and distribute for your business needs.

## 🎉 Get Started Today!

1. **Download the code**
2. **Follow the 5-minute setup**
3. **Start managing your queue beautifully**
4. **Watch your customer satisfaction improve**

---

**Made with ❤️ for barber shops everywhere**

*TrimQ - Where professionalism meets simplicity*